<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:c="http://www.springframework.org/schema/c"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop 
	    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	    http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/task  
        http://www.springframework.org/schema/task/spring-task-4.2.xsd">

	<cache:annotation-driven/>

	<mvc:annotation-driven />
	<context:component-scan base-package="com.yuhuayuan.core.dto" />
	<context:component-scan base-package="com.yuhuayuan.core.persistence" />
	<context:component-scan base-package="com.yuhuayuan.api.controller" />
	<context:component-scan base-package="com.yuhuayuan.core.component.timer" />
	<context:component-scan base-package="com.yuhuayuan.core.service.impl.version" />
	<context:component-scan base-package="com.yuhuayuan.core.service.impl.weixin" />
	<context:component-scan base-package="com.yuhuayuan.core.service.impl.user" />
	<context:component-scan base-package="com.yuhuayuan.api.service.user" />
	<context:component-scan base-package="com.yuhuayuan.core.service.impl.aliyun" />
	<context:component-scan base-package="com.yuhuayuan.core.service.impl.goods" />
	<context:component-scan base-package="com.yuhuayuan.core.service.impl.merchant" />
	<context:component-scan base-package="com.yuhuayuan.core.service.impl.search" />
	<context:component-scan base-package="com.yuhuayuan.core.service.impl" />



	<task:annotation-driven/>
	<context:annotation-config/>

	<aop:aspectj-autoproxy />
	<!--<bean id="myInterceptor" class="com.yuhuayuan.core.aspect.MessageLog" />-->


	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="25000000" />
	</bean>

	<bean
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>


	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="url" value="${jdbc.url}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
	</bean>

	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.yuhuayuan.core.dto.city,com.yuhuayuan.core.dto.goods,com.yuhuayuan.core.dto.log,com.yuhuayuan.core.dto.user,com.yuhuayuan.core.dto.version,com.yuhuayuan.core.dto.weixin" />
		<property name="typeHandlersPackage" value="com.yuhuayuan.core.typehandler" />

		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<!-- config params as the following -->
						<value>
							param1=value1
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>


	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yuhuayuan.core.persistence" />
	</bean>


	<!-- ViewResolver -->
	<bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<mvc:interceptors>
		<!--获取用户信息-->
		<mvc:interceptor>
			<mvc:mapping path="/*.jsp"/>
			<mvc:exclude-mapping path="/index"/>
			<mvc:exclude-mapping path="/login"/>
			<!--<mvc:exclude-mapping path="/merchantUser/sendVerifyCode"/>-->
			<bean id="backendLoginInterceptor" class="com.yuhuayuan.core.component.interceptor.LoginInteceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>


	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate"/>
		<property name="defaultExpiration" value="3600"/>
		<property name="usePrefix" value="true"/>
		<property name="transactionAware" value="false"/>
	</bean>

	<bean id="jedisPoolConfig"
		  class="redis.clients.jedis.JedisPoolConfig"
		  p:maxTotal="${spring.redis.pool.maxTotal}"
		  p:maxIdle="${spring.redis.pool.maxIdle}"
		  p:minIdle="${spring.redis.pool.minIdle}"/>

	<bean id="jedisConnFactory"
		  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:password="54987663"
		  p:hostName="127.0.0.1"
		  p:port="6379"
		  p:pool-config-ref="jedisPoolConfig"/>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnFactory"/>
		<property name="enableTransactionSupport" value="false"/>
	</bean>

</beans>